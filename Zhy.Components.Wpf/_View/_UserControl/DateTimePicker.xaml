<UserControl
    x:Class="Zhy.Components.Wpf._View._UserControl.DateTimePicker"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:Zhy.Components.Wpf._View._UserControl"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Name="dateTimePicker"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <Border>
        <Grid x:Name="gridMain">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <TextBox
                x:Name="textBoxDateTime"
                VerticalContentAlignment="Center"
                Background="Transparent"
                BorderThickness="0"
                IsReadOnly="True">
                <TextBox.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="4" />
                    </Style>
                </TextBox.Resources>
            </TextBox>
            <Popup
                x:Name="popup"
                MinWidth="{Binding ActualWidth, ElementName=gridMain}"
                MinHeight="100"
                MaxHeight="200"
                AllowsTransparency="True"
                Focusable="False"
                IsOpen="{Binding IsChecked, ElementName=toggleButton}"
                Placement="Bottom"
                PopupAnimation="Fade"
                StaysOpen="False">
                <Border
                    x:Name="DropDown"
                    Background="White"
                    CornerRadius="5"
                    SnapsToDevicePixels="True">
                    <Border.Effect>
                        <DropShadowEffect
                            BlurRadius="2"
                            Opacity="0.5"
                            ShadowDepth="0"
                            Color="Black" />
                    </Border.Effect>
                    <StackPanel Margin="10,0,10,10">
                        <Calendar x:Name="calendar" />
                        <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                            <TextBox
                                x:Name="textBoxHour"
                                Width="30"
                                HorizontalContentAlignment="Center"
                                VerticalContentAlignment="Center"
                                InputMethod.IsInputMethodEnabled="False"
                                PreviewKeyDown="textBoxInt_PreviewKeyDown"
                                PreviewTextInput="textBoxHour_PreviewTextInput" />
                            <TextBlock
                                Margin="5,0"
                                VerticalAlignment="Center"
                                Text="时" />
                            <TextBox
                                x:Name="textBoxMinute"
                                Width="30"
                                HorizontalContentAlignment="Center"
                                VerticalContentAlignment="Center"
                                InputMethod.IsInputMethodEnabled="False"
                                PreviewKeyDown="textBoxInt_PreviewKeyDown"
                                PreviewTextInput="textBoxMinute_PreviewTextInput" />
                            <TextBlock
                                Margin="5,0"
                                VerticalAlignment="Center"
                                Text="分" />
                            <TextBox
                                x:Name="textBoxSecond"
                                Width="30"
                                HorizontalContentAlignment="Center"
                                VerticalContentAlignment="Center"
                                InputMethod.IsInputMethodEnabled="False"
                                PreviewKeyDown="textBoxInt_PreviewKeyDown"
                                PreviewTextInput="textBoxSecond_PreviewTextInput" />
                            <TextBlock
                                Margin="5,0"
                                VerticalAlignment="Center"
                                Text="秒" />
                            <Button
                                x:Name="buttonNow"
                                Click="buttonNow_Click"
                                Content="现在">
                                <Button.Resources>
                                    <Style TargetType="Button">
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter Property="Background" Value="#eee" />
                                            </Trigger>
                                        </Style.Triggers>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Button">
                                                    <Border
                                                        Background="{TemplateBinding Background}"
                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                        CornerRadius="3">
                                                        <ContentPresenter
                                                            Margin="5,1"
                                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Background" Value="White" />
                                        <Setter Property="BorderThickness" Value="1" />
                                        <Setter Property="BorderBrush" Value="#999" />
                                        <Setter Property="Foreground" Value="Black" />
                                        <Setter Property="Cursor" Value="Hand" />
                                        <Setter Property="VerticalContentAlignment" Value="Center" />
                                    </Style>
                                </Button.Resources>
                            </Button>
                        </StackPanel>
                    </StackPanel>
                </Border>
            </Popup>
            <ToggleButton
                x:Name="toggleButton"
                Grid.Column="1"
                Margin="0,0,2,0"
                ClickMode="Press"
                Cursor="Hand"
                Foreground="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"
                LostFocus="toggleButton_LostFocus">
                <ToggleButton.Style>
                    <Style TargetType="ToggleButton">
                        <Setter Property="Background" Value="White" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Border
                                        Background="#20bbbbbb"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="3">
                                        <Grid>
                                            <TextBlock
                                                x:Name="arrow_tb"
                                                Margin="10,0"
                                                HorizontalAlignment="Right"
                                                VerticalAlignment="Center"
                                                FontSize="15"
                                                Foreground="{TemplateBinding Foreground}"
                                                RenderTransformOrigin="0.5,0.5"
                                                Text="△">
                                                <TextBlock.RenderTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform />
                                                        <SkewTransform />
                                                        <RotateTransform />
                                                        <TranslateTransform />
                                                    </TransformGroup>
                                                </TextBlock.RenderTransform>
                                            </TextBlock>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsChecked" Value="True" />
                                        <EventTrigger RoutedEvent="Checked">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="arrow_tb" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                                        <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                                        <EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="180" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>

                                        <EventTrigger RoutedEvent="Unchecked">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="arrow_tb" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                                        <EasingDoubleKeyFrame KeyTime="00:00:00" Value="180" />
                                                        <EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ToggleButton.Style>
            </ToggleButton>
        </Grid>
    </Border>
</UserControl>
